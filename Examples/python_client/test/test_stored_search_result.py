# coding: utf-8

"""
    NRF NFDiscovery Service

    NRF NFDiscovery Service. Â© 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.   # noqa: E501

    The version of the OpenAPI document: 1.1.0.alpha-4
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.com.h21lab.TS29510_Nnrf_NFDiscovery.handler.stored_search_result import StoredSearchResult  # noqa: E501
from openapi_client.rest import ApiException

class TestStoredSearchResult(unittest.TestCase):
    """StoredSearchResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test StoredSearchResult
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.stored_search_result.StoredSearchResult()  # noqa: E501
        if include_optional :
            return StoredSearchResult(
                nf_instances = [
                    openapi_client.models.nf_profile.NFProfile(
                        nf_instance_id = '0', 
                        nf_instance_name = '0', 
                        nf_type = null, 
                        nf_status = null, 
                        plmn_list = [
                            openapi_client.models.plmn_id.PlmnId(
                                mcc = 'a', 
                                mnc = 'a', )
                            ], 
                        s_nssais = [
                            openapi_client.models.snssai.Snssai(
                                sst = 0, 
                                sd = 'a', )
                            ], 
                        per_plmn_snssai_list = [
                            openapi_client.models.plmn_snssai.PlmnSnssai(
                                plmn_id = openapi_client.models.plmn_id.PlmnId(
                                    mcc = 'a', 
                                    mnc = 'a', ), 
                                s_nssai_list = [
                                    openapi_client.models.snssai.Snssai(
                                        sst = 0, 
                                        sd = 'a', )
                                    ], 
                                nid = 'a', )
                            ], 
                        nsi_list = [
                            '0'
                            ], 
                        fqdn = '0', 
                        ipv4_addresses = [
                            '198.51.100.1'
                            ], 
                        ipv6_addresses = [
                            '2001:db8:85a3::8a2e:370:7334'
                            ], 
                        capacity = 0, 
                        load = 0, 
                        load_time_stamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        locality = '0', 
                        priority = 0, 
                        udr_info = openapi_client.models.udr_info.UdrInfo(
                            group_id = '0', 
                            supi_ranges = [
                                openapi_client.models.supi_range.SupiRange(
                                    start = 'a', 
                                    end = 'a', 
                                    pattern = '0', )
                                ], 
                            gpsi_ranges = [
                                openapi_client.models.identity_range.IdentityRange(
                                    start = 'a', 
                                    end = 'a', 
                                    pattern = '0', )
                                ], 
                            external_group_identifiers_ranges = [
                                openapi_client.models.identity_range.IdentityRange(
                                    start = 'a', 
                                    end = 'a', 
                                    pattern = '0', )
                                ], 
                            supported_data_sets = [
                                null
                                ], ), 
                        udr_info_ext = [
                            openapi_client.models.udr_info.UdrInfo()
                            ], 
                        udm_info = openapi_client.models.udm_info.UdmInfo(
                            routing_indicators = [
                                'a'
                                ], 
                            internal_group_identifiers_ranges = [
                                openapi_client.models.internal_group_id_range.InternalGroupIdRange(
                                    start = 'a', 
                                    end = 'a', 
                                    pattern = '0', )
                                ], ), 
                        udm_info_ext = [
                            openapi_client.models.udm_info.UdmInfo()
                            ], 
                        ausf_info = openapi_client.models.ausf_info.AusfInfo(), 
                        ausf_info_ext = [
                            openapi_client.models.ausf_info.AusfInfo()
                            ], 
                        amf_info = openapi_client.models.amf_info.AmfInfo(
                            amf_set_id = 'a', 
                            amf_region_id = 'a', 
                            guami_list = [
                                openapi_client.models.guami.Guami(
                                    plmn_id = openapi_client.models.plmn_id.PlmnId(
                                        mcc = 'a', 
                                        mnc = 'a', ), 
                                    amf_id = 'a', )
                                ], 
                            tai_list = [
                                openapi_client.models.tai.Tai(
                                    plmn_id = openapi_client.models.plmn_id.PlmnId(
                                        mcc = 'a', 
                                        mnc = 'a', ), 
                                    tac = 'a', )
                                ], 
                            tai_range_list = [
                                openapi_client.models.tai_range.TaiRange(
                                    plmn_id = openapi_client.models.plmn_id.PlmnId(
                                        mcc = 'a', 
                                        mnc = 'a', ), 
                                    tac_range_list = [
                                        openapi_client.models.tac_range.TacRange(
                                            pattern = '0', )
                                        ], )
                                ], 
                            backup_info_amf_failure = [
                                openapi_client.models.guami.Guami(
                                    plmn_id = openapi_client.models.plmn_id.PlmnId(
                                        mcc = 'a', 
                                        mnc = 'a', ), 
                                    amf_id = 'a', )
                                ], 
                            backup_info_amf_removal = [
                                openapi_client.models.guami.Guami(
                                    plmn_id = openapi_client.models.plmn_id.PlmnId(
                                        mcc = 'a', 
                                        mnc = 'a', ), 
                                    amf_id = 'a', )
                                ], 
                            n2_interface_amf_info = openapi_client.models.n2_interface_amf_info.N2InterfaceAmfInfo(
                                ipv4_endpoint_address = [
                                    '198.51.100.1'
                                    ], 
                                ipv6_endpoint_address = [
                                    '2001:db8:85a3::8a2e:370:7334'
                                    ], 
                                amf_name = '0', ), ), 
                        amf_info_ext = [
                            openapi_client.models.amf_info.AmfInfo(
                                amf_set_id = 'a', 
                                amf_region_id = 'a', 
                                guami_list = [
                                    openapi_client.models.guami.Guami(
                                        plmn_id = openapi_client.models.plmn_id.PlmnId(
                                            mcc = 'a', 
                                            mnc = 'a', ), 
                                        amf_id = 'a', )
                                    ], )
                            ], 
                        smf_info = openapi_client.models.smf_info.SmfInfo(
                            s_nssai_smf_info_list = [
                                openapi_client.models.snssai_smf_info_item.SnssaiSmfInfoItem(
                                    s_nssai = openapi_client.models.snssai.Snssai(
                                        sst = 0, 
                                        sd = 'a', ), 
                                    dnn_smf_info_list = [
                                        openapi_client.models.dnn_smf_info_item.DnnSmfInfoItem(
                                            dnn = '0', )
                                        ], )
                                ], 
                            pgw_fqdn = '0', 
                            access_type = [
                                '3GPP_ACCESS'
                                ], 
                            priority = 0, ), 
                        smf_info_ext = [
                            openapi_client.models.smf_info.SmfInfo(
                                s_nssai_smf_info_list = [
                                    openapi_client.models.snssai_smf_info_item.SnssaiSmfInfoItem(
                                        s_nssai = openapi_client.models.snssai.Snssai(
                                            sst = 0, 
                                            sd = 'a', ), 
                                        dnn_smf_info_list = [
                                            openapi_client.models.dnn_smf_info_item.DnnSmfInfoItem(
                                                dnn = '0', )
                                            ], )
                                    ], 
                                priority = 0, )
                            ], 
                        upf_info = openapi_client.models.upf_info.UpfInfo(
                            s_nssai_upf_info_list = [
                                openapi_client.models.snssai_upf_info_item.SnssaiUpfInfoItem(
                                    s_nssai = openapi_client.models.snssai.Snssai(
                                        sst = 0, 
                                        sd = 'a', ), 
                                    dnn_upf_info_list = [
                                        openapi_client.models.dnn_upf_info_item.DnnUpfInfoItem(
                                            dnn = '0', 
                                            dnai_list = [
                                                '0'
                                                ], 
                                            pdu_session_types = [
                                                null
                                                ], 
                                            ipv4_address_ranges = [
                                                openapi_client.models.ipv4_address_range.Ipv4AddressRange()
                                                ], 
                                            ipv6_prefix_ranges = [
                                                openapi_client.models.ipv6_prefix_range.Ipv6PrefixRange()
                                                ], )
                                        ], 
                                    redundant_transport = True, )
                                ], 
                            smf_serving_area = [
                                '0'
                                ], 
                            interface_upf_info_list = [
                                openapi_client.models.interface_upf_info_item.InterfaceUpfInfoItem(
                                    interface_type = null, 
                                    ipv4_endpoint_addresses = [
                                        '198.51.100.1'
                                        ], 
                                    ipv6_endpoint_addresses = [
                                        '2001:db8:85a3::8a2e:370:7334'
                                        ], 
                                    endpoint_fqdn = '0', 
                                    network_instance = '0', )
                                ], 
                            iwk_eps_ind = True, 
                            pdu_session_types = [
                                null
                                ], 
                            atsss_capability = openapi_client.models.atsss_capability.AtsssCapability(
                                atsss_ll = True, 
                                mptcp = True, ), 
                            ue_ip_addr_ind = True, 
                            w_agf_info = openapi_client.models.w_agf_info.WAgfInfo(), 
                            tngf_info = openapi_client.models.tngf_info.TngfInfo(), 
                            twif_info = openapi_client.models.twif_info.TwifInfo(), 
                            priority = 0, 
                            redundant_gtpu = True, ), 
                        upf_info_ext = [
                            openapi_client.models.upf_info.UpfInfo(
                                s_nssai_upf_info_list = [
                                    openapi_client.models.snssai_upf_info_item.SnssaiUpfInfoItem(
                                        s_nssai = openapi_client.models.snssai.Snssai(
                                            sst = 0, 
                                            sd = 'a', ), 
                                        dnn_upf_info_list = [
                                            openapi_client.models.dnn_upf_info_item.DnnUpfInfoItem(
                                                dnn = '0', )
                                            ], 
                                        redundant_transport = True, )
                                    ], 
                                iwk_eps_ind = True, 
                                ue_ip_addr_ind = True, 
                                priority = 0, 
                                redundant_gtpu = True, )
                            ], 
                        pcf_info = openapi_client.models.pcf_info.PcfInfo(
                            dnn_list = [
                                '0'
                                ], 
                            rx_diam_host = 'a', 
                            rx_diam_realm = 'a', 
                            v2x_support_ind = True, ), 
                        pcf_info_ext = [
                            openapi_client.models.pcf_info.PcfInfo(
                                v2x_support_ind = True, )
                            ], 
                        bsf_info = openapi_client.models.bsf_info.BsfInfo(
                            ip_domain_list = [
                                '0'
                                ], ), 
                        bsf_info_ext = [
                            openapi_client.models.bsf_info.BsfInfo()
                            ], 
                        chf_info = openapi_client.models.chf_info.ChfInfo(
                            supi_range_list = [
                                openapi_client.models.supi_range.SupiRange(
                                    pattern = '0', )
                                ], 
                            gpsi_range_list = [
                                openapi_client.models.identity_range.IdentityRange(
                                    pattern = '0', )
                                ], 
                            plmn_range_list = [
                                openapi_client.models.plmn_range.PlmnRange(
                                    pattern = '0', )
                                ], ), 
                        chf_info_ext = [
                            openapi_client.models.chf_info.ChfInfo()
                            ], 
                        udsf_info = openapi_client.models.udsf_info.UdsfInfo(), 
                        udsf_info_ext = [
                            openapi_client.models.udsf_info.UdsfInfo()
                            ], 
                        nwdaf_info = openapi_client.models.nwdaf_info.NwdafInfo(
                            event_ids = [
                                null
                                ], 
                            nwdaf_events = [
                                null
                                ], ), 
                        nef_info = openapi_client.models.nef_info.NefInfo(
                            nef_id = '0', 
                            pfd_data = openapi_client.models.pfd_data.PfdData(
                                app_ids = [
                                    '0'
                                    ], 
                                af_ids = [
                                    '0'
                                    ], ), 
                            af_ee_data = openapi_client.models.af_event_exposure_data.AfEventExposureData(
                                af_events = [
                                    null
                                    ], ), ), 
                        pcscf_info = [
                            openapi_client.models.pcscf_info.PcscfInfo()
                            ], 
                        hss_info = [
                            openapi_client.models.hss_info.HssInfo(
                                ims_ranges = [
                                    openapi_client.models.imsi_range.ImsiRange(
                                        pattern = '0', )
                                    ], )
                            ], 
                        custom_info = openapi_client.models.custom_info.customInfo(), 
                        recovery_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        nf_service_persistence = True, 
                        nf_services = [
                            openapi_client.models.nf_service.NFService(
                                service_instance_id = '0', 
                                service_name = null, 
                                versions = [
                                    openapi_client.models.nf_service_version.NFServiceVersion(
                                        api_version_in_uri = '0', 
                                        api_full_version = '0', 
                                        expiry = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                    ], 
                                scheme = null, 
                                nf_service_status = null, 
                                ip_end_points = [
                                    openapi_client.models.ip_end_point.IpEndPoint(
                                        ipv4_address = '198.51.100.1', 
                                        ipv6_address = '2001:db8:85a3::8a2e:370:7334', 
                                        transport = null, 
                                        port = 0, )
                                    ], 
                                api_prefix = '0', 
                                default_notification_subscriptions = [
                                    openapi_client.models.default_notification_subscription.DefaultNotificationSubscription(
                                        notification_type = null, 
                                        callback_uri = '0', 
                                        n1_message_class = null, 
                                        n2_information_class = null, )
                                    ], 
                                capacity = 0, 
                                load = 0, 
                                priority = 0, 
                                chf_service_info = openapi_client.models.chf_service_info.ChfServiceInfo(
                                    primary_chf_service_instance = '0', 
                                    secondary_chf_service_instance = '0', ), 
                                supported_features = 'a', 
                                nf_service_set_id_list = [
                                    '0'
                                    ], 
                                vendor_id = 'a', 
                                supported_vendor_specific_features = {
                                    'key' : [
                                        openapi_client.models.vendor_specific_feature.VendorSpecificFeature(
                                            feature_name = '0', 
                                            feature_version = '0', )
                                        ]
                                    }, 
                                oauth2_required = True, )
                            ], 
                        default_notification_subscriptions = [
                            openapi_client.models.default_notification_subscription.DefaultNotificationSubscription(
                                notification_type = null, 
                                callback_uri = '0', )
                            ], 
                        lmf_info = openapi_client.models.lmf_info.LmfInfo(
                            serving_client_types = [
                                null
                                ], 
                            lmf_id = '0', 
                            serving_access_types = [
                                '3GPP_ACCESS'
                                ], 
                            serving_an_node_types = [
                                null
                                ], 
                            serving_rat_types = [
                                null
                                ], ), 
                        gmlc_info = openapi_client.models.gmlc_info.GmlcInfo(), 
                        snpn_list = [
                            openapi_client.models.plmn_id_nid.PlmnIdNid(
                                mcc = 'a', 
                                mnc = 'a', )
                            ], 
                        nf_set_id_list = [
                            '0'
                            ], 
                        serving_scope = [
                            '0'
                            ], 
                        lc_h_support_ind = True, 
                        olc_h_support_ind = True, )
                    ]
            )
        else :
            return StoredSearchResult(
                nf_instances = [
                    openapi_client.models.nf_profile.NFProfile(
                        nf_instance_id = '0', 
                        nf_instance_name = '0', 
                        nf_type = null, 
                        nf_status = null, 
                        plmn_list = [
                            openapi_client.models.plmn_id.PlmnId(
                                mcc = 'a', 
                                mnc = 'a', )
                            ], 
                        s_nssais = [
                            openapi_client.models.snssai.Snssai(
                                sst = 0, 
                                sd = 'a', )
                            ], 
                        per_plmn_snssai_list = [
                            openapi_client.models.plmn_snssai.PlmnSnssai(
                                plmn_id = openapi_client.models.plmn_id.PlmnId(
                                    mcc = 'a', 
                                    mnc = 'a', ), 
                                s_nssai_list = [
                                    openapi_client.models.snssai.Snssai(
                                        sst = 0, 
                                        sd = 'a', )
                                    ], 
                                nid = 'a', )
                            ], 
                        nsi_list = [
                            '0'
                            ], 
                        fqdn = '0', 
                        ipv4_addresses = [
                            '198.51.100.1'
                            ], 
                        ipv6_addresses = [
                            '2001:db8:85a3::8a2e:370:7334'
                            ], 
                        capacity = 0, 
                        load = 0, 
                        load_time_stamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        locality = '0', 
                        priority = 0, 
                        udr_info = openapi_client.models.udr_info.UdrInfo(
                            group_id = '0', 
                            supi_ranges = [
                                openapi_client.models.supi_range.SupiRange(
                                    start = 'a', 
                                    end = 'a', 
                                    pattern = '0', )
                                ], 
                            gpsi_ranges = [
                                openapi_client.models.identity_range.IdentityRange(
                                    start = 'a', 
                                    end = 'a', 
                                    pattern = '0', )
                                ], 
                            external_group_identifiers_ranges = [
                                openapi_client.models.identity_range.IdentityRange(
                                    start = 'a', 
                                    end = 'a', 
                                    pattern = '0', )
                                ], 
                            supported_data_sets = [
                                null
                                ], ), 
                        udr_info_ext = [
                            openapi_client.models.udr_info.UdrInfo()
                            ], 
                        udm_info = openapi_client.models.udm_info.UdmInfo(
                            routing_indicators = [
                                'a'
                                ], 
                            internal_group_identifiers_ranges = [
                                openapi_client.models.internal_group_id_range.InternalGroupIdRange(
                                    start = 'a', 
                                    end = 'a', 
                                    pattern = '0', )
                                ], ), 
                        udm_info_ext = [
                            openapi_client.models.udm_info.UdmInfo()
                            ], 
                        ausf_info = openapi_client.models.ausf_info.AusfInfo(), 
                        ausf_info_ext = [
                            openapi_client.models.ausf_info.AusfInfo()
                            ], 
                        amf_info = openapi_client.models.amf_info.AmfInfo(
                            amf_set_id = 'a', 
                            amf_region_id = 'a', 
                            guami_list = [
                                openapi_client.models.guami.Guami(
                                    plmn_id = openapi_client.models.plmn_id.PlmnId(
                                        mcc = 'a', 
                                        mnc = 'a', ), 
                                    amf_id = 'a', )
                                ], 
                            tai_list = [
                                openapi_client.models.tai.Tai(
                                    plmn_id = openapi_client.models.plmn_id.PlmnId(
                                        mcc = 'a', 
                                        mnc = 'a', ), 
                                    tac = 'a', )
                                ], 
                            tai_range_list = [
                                openapi_client.models.tai_range.TaiRange(
                                    plmn_id = openapi_client.models.plmn_id.PlmnId(
                                        mcc = 'a', 
                                        mnc = 'a', ), 
                                    tac_range_list = [
                                        openapi_client.models.tac_range.TacRange(
                                            pattern = '0', )
                                        ], )
                                ], 
                            backup_info_amf_failure = [
                                openapi_client.models.guami.Guami(
                                    plmn_id = openapi_client.models.plmn_id.PlmnId(
                                        mcc = 'a', 
                                        mnc = 'a', ), 
                                    amf_id = 'a', )
                                ], 
                            backup_info_amf_removal = [
                                openapi_client.models.guami.Guami(
                                    plmn_id = openapi_client.models.plmn_id.PlmnId(
                                        mcc = 'a', 
                                        mnc = 'a', ), 
                                    amf_id = 'a', )
                                ], 
                            n2_interface_amf_info = openapi_client.models.n2_interface_amf_info.N2InterfaceAmfInfo(
                                ipv4_endpoint_address = [
                                    '198.51.100.1'
                                    ], 
                                ipv6_endpoint_address = [
                                    '2001:db8:85a3::8a2e:370:7334'
                                    ], 
                                amf_name = '0', ), ), 
                        amf_info_ext = [
                            openapi_client.models.amf_info.AmfInfo(
                                amf_set_id = 'a', 
                                amf_region_id = 'a', 
                                guami_list = [
                                    openapi_client.models.guami.Guami(
                                        plmn_id = openapi_client.models.plmn_id.PlmnId(
                                            mcc = 'a', 
                                            mnc = 'a', ), 
                                        amf_id = 'a', )
                                    ], )
                            ], 
                        smf_info = openapi_client.models.smf_info.SmfInfo(
                            s_nssai_smf_info_list = [
                                openapi_client.models.snssai_smf_info_item.SnssaiSmfInfoItem(
                                    s_nssai = openapi_client.models.snssai.Snssai(
                                        sst = 0, 
                                        sd = 'a', ), 
                                    dnn_smf_info_list = [
                                        openapi_client.models.dnn_smf_info_item.DnnSmfInfoItem(
                                            dnn = '0', )
                                        ], )
                                ], 
                            pgw_fqdn = '0', 
                            access_type = [
                                '3GPP_ACCESS'
                                ], 
                            priority = 0, ), 
                        smf_info_ext = [
                            openapi_client.models.smf_info.SmfInfo(
                                s_nssai_smf_info_list = [
                                    openapi_client.models.snssai_smf_info_item.SnssaiSmfInfoItem(
                                        s_nssai = openapi_client.models.snssai.Snssai(
                                            sst = 0, 
                                            sd = 'a', ), 
                                        dnn_smf_info_list = [
                                            openapi_client.models.dnn_smf_info_item.DnnSmfInfoItem(
                                                dnn = '0', )
                                            ], )
                                    ], 
                                priority = 0, )
                            ], 
                        upf_info = openapi_client.models.upf_info.UpfInfo(
                            s_nssai_upf_info_list = [
                                openapi_client.models.snssai_upf_info_item.SnssaiUpfInfoItem(
                                    s_nssai = openapi_client.models.snssai.Snssai(
                                        sst = 0, 
                                        sd = 'a', ), 
                                    dnn_upf_info_list = [
                                        openapi_client.models.dnn_upf_info_item.DnnUpfInfoItem(
                                            dnn = '0', 
                                            dnai_list = [
                                                '0'
                                                ], 
                                            pdu_session_types = [
                                                null
                                                ], 
                                            ipv4_address_ranges = [
                                                openapi_client.models.ipv4_address_range.Ipv4AddressRange()
                                                ], 
                                            ipv6_prefix_ranges = [
                                                openapi_client.models.ipv6_prefix_range.Ipv6PrefixRange()
                                                ], )
                                        ], 
                                    redundant_transport = True, )
                                ], 
                            smf_serving_area = [
                                '0'
                                ], 
                            interface_upf_info_list = [
                                openapi_client.models.interface_upf_info_item.InterfaceUpfInfoItem(
                                    interface_type = null, 
                                    ipv4_endpoint_addresses = [
                                        '198.51.100.1'
                                        ], 
                                    ipv6_endpoint_addresses = [
                                        '2001:db8:85a3::8a2e:370:7334'
                                        ], 
                                    endpoint_fqdn = '0', 
                                    network_instance = '0', )
                                ], 
                            iwk_eps_ind = True, 
                            pdu_session_types = [
                                null
                                ], 
                            atsss_capability = openapi_client.models.atsss_capability.AtsssCapability(
                                atsss_ll = True, 
                                mptcp = True, ), 
                            ue_ip_addr_ind = True, 
                            w_agf_info = openapi_client.models.w_agf_info.WAgfInfo(), 
                            tngf_info = openapi_client.models.tngf_info.TngfInfo(), 
                            twif_info = openapi_client.models.twif_info.TwifInfo(), 
                            priority = 0, 
                            redundant_gtpu = True, ), 
                        upf_info_ext = [
                            openapi_client.models.upf_info.UpfInfo(
                                s_nssai_upf_info_list = [
                                    openapi_client.models.snssai_upf_info_item.SnssaiUpfInfoItem(
                                        s_nssai = openapi_client.models.snssai.Snssai(
                                            sst = 0, 
                                            sd = 'a', ), 
                                        dnn_upf_info_list = [
                                            openapi_client.models.dnn_upf_info_item.DnnUpfInfoItem(
                                                dnn = '0', )
                                            ], 
                                        redundant_transport = True, )
                                    ], 
                                iwk_eps_ind = True, 
                                ue_ip_addr_ind = True, 
                                priority = 0, 
                                redundant_gtpu = True, )
                            ], 
                        pcf_info = openapi_client.models.pcf_info.PcfInfo(
                            dnn_list = [
                                '0'
                                ], 
                            rx_diam_host = 'a', 
                            rx_diam_realm = 'a', 
                            v2x_support_ind = True, ), 
                        pcf_info_ext = [
                            openapi_client.models.pcf_info.PcfInfo(
                                v2x_support_ind = True, )
                            ], 
                        bsf_info = openapi_client.models.bsf_info.BsfInfo(
                            ip_domain_list = [
                                '0'
                                ], ), 
                        bsf_info_ext = [
                            openapi_client.models.bsf_info.BsfInfo()
                            ], 
                        chf_info = openapi_client.models.chf_info.ChfInfo(
                            supi_range_list = [
                                openapi_client.models.supi_range.SupiRange(
                                    pattern = '0', )
                                ], 
                            gpsi_range_list = [
                                openapi_client.models.identity_range.IdentityRange(
                                    pattern = '0', )
                                ], 
                            plmn_range_list = [
                                openapi_client.models.plmn_range.PlmnRange(
                                    pattern = '0', )
                                ], ), 
                        chf_info_ext = [
                            openapi_client.models.chf_info.ChfInfo()
                            ], 
                        udsf_info = openapi_client.models.udsf_info.UdsfInfo(), 
                        udsf_info_ext = [
                            openapi_client.models.udsf_info.UdsfInfo()
                            ], 
                        nwdaf_info = openapi_client.models.nwdaf_info.NwdafInfo(
                            event_ids = [
                                null
                                ], 
                            nwdaf_events = [
                                null
                                ], ), 
                        nef_info = openapi_client.models.nef_info.NefInfo(
                            nef_id = '0', 
                            pfd_data = openapi_client.models.pfd_data.PfdData(
                                app_ids = [
                                    '0'
                                    ], 
                                af_ids = [
                                    '0'
                                    ], ), 
                            af_ee_data = openapi_client.models.af_event_exposure_data.AfEventExposureData(
                                af_events = [
                                    null
                                    ], ), ), 
                        pcscf_info = [
                            openapi_client.models.pcscf_info.PcscfInfo()
                            ], 
                        hss_info = [
                            openapi_client.models.hss_info.HssInfo(
                                ims_ranges = [
                                    openapi_client.models.imsi_range.ImsiRange(
                                        pattern = '0', )
                                    ], )
                            ], 
                        custom_info = openapi_client.models.custom_info.customInfo(), 
                        recovery_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        nf_service_persistence = True, 
                        nf_services = [
                            openapi_client.models.nf_service.NFService(
                                service_instance_id = '0', 
                                service_name = null, 
                                versions = [
                                    openapi_client.models.nf_service_version.NFServiceVersion(
                                        api_version_in_uri = '0', 
                                        api_full_version = '0', 
                                        expiry = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                    ], 
                                scheme = null, 
                                nf_service_status = null, 
                                ip_end_points = [
                                    openapi_client.models.ip_end_point.IpEndPoint(
                                        ipv4_address = '198.51.100.1', 
                                        ipv6_address = '2001:db8:85a3::8a2e:370:7334', 
                                        transport = null, 
                                        port = 0, )
                                    ], 
                                api_prefix = '0', 
                                default_notification_subscriptions = [
                                    openapi_client.models.default_notification_subscription.DefaultNotificationSubscription(
                                        notification_type = null, 
                                        callback_uri = '0', 
                                        n1_message_class = null, 
                                        n2_information_class = null, )
                                    ], 
                                capacity = 0, 
                                load = 0, 
                                priority = 0, 
                                chf_service_info = openapi_client.models.chf_service_info.ChfServiceInfo(
                                    primary_chf_service_instance = '0', 
                                    secondary_chf_service_instance = '0', ), 
                                supported_features = 'a', 
                                nf_service_set_id_list = [
                                    '0'
                                    ], 
                                vendor_id = 'a', 
                                supported_vendor_specific_features = {
                                    'key' : [
                                        openapi_client.models.vendor_specific_feature.VendorSpecificFeature(
                                            feature_name = '0', 
                                            feature_version = '0', )
                                        ]
                                    }, 
                                oauth2_required = True, )
                            ], 
                        default_notification_subscriptions = [
                            openapi_client.models.default_notification_subscription.DefaultNotificationSubscription(
                                notification_type = null, 
                                callback_uri = '0', )
                            ], 
                        lmf_info = openapi_client.models.lmf_info.LmfInfo(
                            serving_client_types = [
                                null
                                ], 
                            lmf_id = '0', 
                            serving_access_types = [
                                '3GPP_ACCESS'
                                ], 
                            serving_an_node_types = [
                                null
                                ], 
                            serving_rat_types = [
                                null
                                ], ), 
                        gmlc_info = openapi_client.models.gmlc_info.GmlcInfo(), 
                        snpn_list = [
                            openapi_client.models.plmn_id_nid.PlmnIdNid(
                                mcc = 'a', 
                                mnc = 'a', )
                            ], 
                        nf_set_id_list = [
                            '0'
                            ], 
                        serving_scope = [
                            '0'
                            ], 
                        lc_h_support_ind = True, 
                        olc_h_support_ind = True, )
                    ],
        )

    def testStoredSearchResult(self):
        """Test StoredSearchResult"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
