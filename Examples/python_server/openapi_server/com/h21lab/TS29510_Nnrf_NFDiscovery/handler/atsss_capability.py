# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.com.h21lab.TS29510_Nnrf_NFDiscovery.handler.base_model_ import Model
from openapi_server import util


class AtsssCapability(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, atsss_ll=False, mptcp=False):  # noqa: E501
        """AtsssCapability - a model defined in OpenAPI

        :param atsss_ll: The atsss_ll of this AtsssCapability.  # noqa: E501
        :type atsss_ll: bool
        :param mptcp: The mptcp of this AtsssCapability.  # noqa: E501
        :type mptcp: bool
        """
        self.openapi_types = {
            'atsss_ll': bool,
            'mptcp': bool
        }

        self.attribute_map = {
            'atsss_ll': 'atsssLL',
            'mptcp': 'mptcp'
        }

        self._atsss_ll = atsss_ll
        self._mptcp = mptcp

    @classmethod
    def from_dict(cls, dikt) -> 'AtsssCapability':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AtsssCapability of this AtsssCapability.  # noqa: E501
        :rtype: AtsssCapability
        """
        return util.deserialize_model(dikt, cls)

    @property
    def atsss_ll(self):
        """Gets the atsss_ll of this AtsssCapability.


        :return: The atsss_ll of this AtsssCapability.
        :rtype: bool
        """
        return self._atsss_ll

    @atsss_ll.setter
    def atsss_ll(self, atsss_ll):
        """Sets the atsss_ll of this AtsssCapability.


        :param atsss_ll: The atsss_ll of this AtsssCapability.
        :type atsss_ll: bool
        """

        self._atsss_ll = atsss_ll

    @property
    def mptcp(self):
        """Gets the mptcp of this AtsssCapability.


        :return: The mptcp of this AtsssCapability.
        :rtype: bool
        """
        return self._mptcp

    @mptcp.setter
    def mptcp(self, mptcp):
        """Sets the mptcp of this AtsssCapability.


        :param mptcp: The mptcp of this AtsssCapability.
        :type mptcp: bool
        """

        self._mptcp = mptcp
