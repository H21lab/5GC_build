# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.com.h21lab.TS29510_Nnrf_NFDiscovery.handler.base_model_ import Model
from openapi_server.com.h21lab.TS29510_Nnrf_NFDiscovery.handler.n1_message_class import N1MessageClass
from openapi_server.com.h21lab.TS29510_Nnrf_NFDiscovery.handler.n2_information_class import N2InformationClass
from openapi_server.com.h21lab.TS29510_Nnrf_NFDiscovery.handler.notification_type import NotificationType
from openapi_server import util

from openapi_server.com.h21lab.TS29510_Nnrf_NFDiscovery.handler.n1_message_class import N1MessageClass  # noqa: E501
from openapi_server.com.h21lab.TS29510_Nnrf_NFDiscovery.handler.n2_information_class import N2InformationClass  # noqa: E501
from openapi_server.com.h21lab.TS29510_Nnrf_NFDiscovery.handler.notification_type import NotificationType  # noqa: E501

class DefaultNotificationSubscription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, notification_type=None, callback_uri=None, n1_message_class=None, n2_information_class=None, versions=None):  # noqa: E501
        """DefaultNotificationSubscription - a model defined in OpenAPI

        :param notification_type: The notification_type of this DefaultNotificationSubscription.  # noqa: E501
        :type notification_type: NotificationType
        :param callback_uri: The callback_uri of this DefaultNotificationSubscription.  # noqa: E501
        :type callback_uri: str
        :param n1_message_class: The n1_message_class of this DefaultNotificationSubscription.  # noqa: E501
        :type n1_message_class: N1MessageClass
        :param n2_information_class: The n2_information_class of this DefaultNotificationSubscription.  # noqa: E501
        :type n2_information_class: N2InformationClass
        :param versions: The versions of this DefaultNotificationSubscription.  # noqa: E501
        :type versions: List[str]
        """
        self.openapi_types = {
            'notification_type': NotificationType,
            'callback_uri': str,
            'n1_message_class': N1MessageClass,
            'n2_information_class': N2InformationClass,
            'versions': List[str]
        }

        self.attribute_map = {
            'notification_type': 'notificationType',
            'callback_uri': 'callbackUri',
            'n1_message_class': 'n1MessageClass',
            'n2_information_class': 'n2InformationClass',
            'versions': 'versions'
        }

        self._notification_type = notification_type
        self._callback_uri = callback_uri
        self._n1_message_class = n1_message_class
        self._n2_information_class = n2_information_class
        self._versions = versions

    @classmethod
    def from_dict(cls, dikt) -> 'DefaultNotificationSubscription':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DefaultNotificationSubscription of this DefaultNotificationSubscription.  # noqa: E501
        :rtype: DefaultNotificationSubscription
        """
        return util.deserialize_model(dikt, cls)

    @property
    def notification_type(self):
        """Gets the notification_type of this DefaultNotificationSubscription.


        :return: The notification_type of this DefaultNotificationSubscription.
        :rtype: NotificationType
        """
        return self._notification_type

    @notification_type.setter
    def notification_type(self, notification_type):
        """Sets the notification_type of this DefaultNotificationSubscription.


        :param notification_type: The notification_type of this DefaultNotificationSubscription.
        :type notification_type: NotificationType
        """
        if notification_type is None:
            raise ValueError("Invalid value for `notification_type`, must not be `None`")  # noqa: E501

        self._notification_type = notification_type

    @property
    def callback_uri(self):
        """Gets the callback_uri of this DefaultNotificationSubscription.


        :return: The callback_uri of this DefaultNotificationSubscription.
        :rtype: str
        """
        return self._callback_uri

    @callback_uri.setter
    def callback_uri(self, callback_uri):
        """Sets the callback_uri of this DefaultNotificationSubscription.


        :param callback_uri: The callback_uri of this DefaultNotificationSubscription.
        :type callback_uri: str
        """
        if callback_uri is None:
            raise ValueError("Invalid value for `callback_uri`, must not be `None`")  # noqa: E501

        self._callback_uri = callback_uri

    @property
    def n1_message_class(self):
        """Gets the n1_message_class of this DefaultNotificationSubscription.


        :return: The n1_message_class of this DefaultNotificationSubscription.
        :rtype: N1MessageClass
        """
        return self._n1_message_class

    @n1_message_class.setter
    def n1_message_class(self, n1_message_class):
        """Sets the n1_message_class of this DefaultNotificationSubscription.


        :param n1_message_class: The n1_message_class of this DefaultNotificationSubscription.
        :type n1_message_class: N1MessageClass
        """

        self._n1_message_class = n1_message_class

    @property
    def n2_information_class(self):
        """Gets the n2_information_class of this DefaultNotificationSubscription.


        :return: The n2_information_class of this DefaultNotificationSubscription.
        :rtype: N2InformationClass
        """
        return self._n2_information_class

    @n2_information_class.setter
    def n2_information_class(self, n2_information_class):
        """Sets the n2_information_class of this DefaultNotificationSubscription.


        :param n2_information_class: The n2_information_class of this DefaultNotificationSubscription.
        :type n2_information_class: N2InformationClass
        """

        self._n2_information_class = n2_information_class

    @property
    def versions(self):
        """Gets the versions of this DefaultNotificationSubscription.


        :return: The versions of this DefaultNotificationSubscription.
        :rtype: List[str]
        """
        return self._versions

    @versions.setter
    def versions(self, versions):
        """Sets the versions of this DefaultNotificationSubscription.


        :param versions: The versions of this DefaultNotificationSubscription.
        :type versions: List[str]
        """

        self._versions = versions
