# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.com.h21lab.TS29510_Nnrf_NFDiscovery.handler.base_model_ import Model
from openapi_server.com.h21lab.TS29510_Nnrf_NFDiscovery.handler.dnf_unit import DnfUnit
from openapi_server import util

from openapi_server.com.h21lab.TS29510_Nnrf_NFDiscovery.handler.dnf_unit import DnfUnit  # noqa: E501

class Dnf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dnf_units=None):  # noqa: E501
        """Dnf - a model defined in OpenAPI

        :param dnf_units: The dnf_units of this Dnf.  # noqa: E501
        :type dnf_units: List[DnfUnit]
        """
        self.openapi_types = {
            'dnf_units': List[DnfUnit]
        }

        self.attribute_map = {
            'dnf_units': 'dnfUnits'
        }

        self._dnf_units = dnf_units

    @classmethod
    def from_dict(cls, dikt) -> 'Dnf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Dnf of this Dnf.  # noqa: E501
        :rtype: Dnf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dnf_units(self):
        """Gets the dnf_units of this Dnf.


        :return: The dnf_units of this Dnf.
        :rtype: List[DnfUnit]
        """
        return self._dnf_units

    @dnf_units.setter
    def dnf_units(self, dnf_units):
        """Sets the dnf_units of this Dnf.


        :param dnf_units: The dnf_units of this Dnf.
        :type dnf_units: List[DnfUnit]
        """
        if dnf_units is None:
            raise ValueError("Invalid value for `dnf_units`, must not be `None`")  # noqa: E501

        self._dnf_units = dnf_units
