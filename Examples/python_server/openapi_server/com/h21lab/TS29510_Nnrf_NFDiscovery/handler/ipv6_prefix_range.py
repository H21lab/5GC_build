# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.com.h21lab.TS29510_Nnrf_NFDiscovery.handler.base_model_ import Model
from openapi_server.com.h21lab.TS29510_Nnrf_NFDiscovery.handler.ipv6_prefix import Ipv6Prefix
from openapi_server import util

from openapi_server.com.h21lab.TS29510_Nnrf_NFDiscovery.handler.ipv6_prefix import Ipv6Prefix  # noqa: E501

class Ipv6PrefixRange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, start=None, end=None):  # noqa: E501
        """Ipv6PrefixRange - a model defined in OpenAPI

        :param start: The start of this Ipv6PrefixRange.  # noqa: E501
        :type start: Ipv6Prefix
        :param end: The end of this Ipv6PrefixRange.  # noqa: E501
        :type end: Ipv6Prefix
        """
        self.openapi_types = {
            'start': Ipv6Prefix,
            'end': Ipv6Prefix
        }

        self.attribute_map = {
            'start': 'start',
            'end': 'end'
        }

        self._start = start
        self._end = end

    @classmethod
    def from_dict(cls, dikt) -> 'Ipv6PrefixRange':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Ipv6PrefixRange of this Ipv6PrefixRange.  # noqa: E501
        :rtype: Ipv6PrefixRange
        """
        return util.deserialize_model(dikt, cls)

    @property
    def start(self):
        """Gets the start of this Ipv6PrefixRange.


        :return: The start of this Ipv6PrefixRange.
        :rtype: Ipv6Prefix
        """
        return self._start

    @start.setter
    def start(self, start):
        """Sets the start of this Ipv6PrefixRange.


        :param start: The start of this Ipv6PrefixRange.
        :type start: Ipv6Prefix
        """

        self._start = start

    @property
    def end(self):
        """Gets the end of this Ipv6PrefixRange.


        :return: The end of this Ipv6PrefixRange.
        :rtype: Ipv6Prefix
        """
        return self._end

    @end.setter
    def end(self, end):
        """Sets the end of this Ipv6PrefixRange.


        :param end: The end of this Ipv6PrefixRange.
        :type end: Ipv6Prefix
        """

        self._end = end
