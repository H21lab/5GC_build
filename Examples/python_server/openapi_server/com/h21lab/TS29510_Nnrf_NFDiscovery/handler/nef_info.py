# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.com.h21lab.TS29510_Nnrf_NFDiscovery.handler.base_model_ import Model
from openapi_server.com.h21lab.TS29510_Nnrf_NFDiscovery.handler.af_event_exposure_data import AfEventExposureData
from openapi_server.com.h21lab.TS29510_Nnrf_NFDiscovery.handler.pfd_data import PfdData
from openapi_server import util

from openapi_server.com.h21lab.TS29510_Nnrf_NFDiscovery.handler.af_event_exposure_data import AfEventExposureData  # noqa: E501
from openapi_server.com.h21lab.TS29510_Nnrf_NFDiscovery.handler.pfd_data import PfdData  # noqa: E501

class NefInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, nef_id=None, pfd_data=None, af_ee_data=None):  # noqa: E501
        """NefInfo - a model defined in OpenAPI

        :param nef_id: The nef_id of this NefInfo.  # noqa: E501
        :type nef_id: str
        :param pfd_data: The pfd_data of this NefInfo.  # noqa: E501
        :type pfd_data: PfdData
        :param af_ee_data: The af_ee_data of this NefInfo.  # noqa: E501
        :type af_ee_data: AfEventExposureData
        """
        self.openapi_types = {
            'nef_id': str,
            'pfd_data': PfdData,
            'af_ee_data': AfEventExposureData
        }

        self.attribute_map = {
            'nef_id': 'nefId',
            'pfd_data': 'pfdData',
            'af_ee_data': 'afEeData'
        }

        self._nef_id = nef_id
        self._pfd_data = pfd_data
        self._af_ee_data = af_ee_data

    @classmethod
    def from_dict(cls, dikt) -> 'NefInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NefInfo of this NefInfo.  # noqa: E501
        :rtype: NefInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def nef_id(self):
        """Gets the nef_id of this NefInfo.

        Identity of the NEF  # noqa: E501

        :return: The nef_id of this NefInfo.
        :rtype: str
        """
        return self._nef_id

    @nef_id.setter
    def nef_id(self, nef_id):
        """Sets the nef_id of this NefInfo.

        Identity of the NEF  # noqa: E501

        :param nef_id: The nef_id of this NefInfo.
        :type nef_id: str
        """

        self._nef_id = nef_id

    @property
    def pfd_data(self):
        """Gets the pfd_data of this NefInfo.


        :return: The pfd_data of this NefInfo.
        :rtype: PfdData
        """
        return self._pfd_data

    @pfd_data.setter
    def pfd_data(self, pfd_data):
        """Sets the pfd_data of this NefInfo.


        :param pfd_data: The pfd_data of this NefInfo.
        :type pfd_data: PfdData
        """

        self._pfd_data = pfd_data

    @property
    def af_ee_data(self):
        """Gets the af_ee_data of this NefInfo.


        :return: The af_ee_data of this NefInfo.
        :rtype: AfEventExposureData
        """
        return self._af_ee_data

    @af_ee_data.setter
    def af_ee_data(self, af_ee_data):
        """Sets the af_ee_data of this NefInfo.


        :param af_ee_data: The af_ee_data of this NefInfo.
        :type af_ee_data: AfEventExposureData
        """

        self._af_ee_data = af_ee_data
