# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.com.h21lab.TS29573_N32_Handshake.handler.base_model_ import Model
from openapi_server import util


class CallbackName(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, callback_type=None):  # noqa: E501
        """CallbackName - a model defined in OpenAPI

        :param callback_type: The callback_type of this CallbackName.  # noqa: E501
        :type callback_type: str
        """
        self.openapi_types = {
            'callback_type': str
        }

        self.attribute_map = {
            'callback_type': 'callbackType'
        }

        self._callback_type = callback_type

    @classmethod
    def from_dict(cls, dikt) -> 'CallbackName':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CallbackName of this CallbackName.  # noqa: E501
        :rtype: CallbackName
        """
        return util.deserialize_model(dikt, cls)

    @property
    def callback_type(self):
        """Gets the callback_type of this CallbackName.


        :return: The callback_type of this CallbackName.
        :rtype: str
        """
        return self._callback_type

    @callback_type.setter
    def callback_type(self, callback_type):
        """Sets the callback_type of this CallbackName.


        :param callback_type: The callback_type of this CallbackName.
        :type callback_type: str
        """
        if callback_type is None:
            raise ValueError("Invalid value for `callback_type`, must not be `None`")  # noqa: E501

        self._callback_type = callback_type
