# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.com.h21lab.TS29573_N32_Handshake.handler.base_model_ import Model
from openapi_server.com.h21lab.TS29573_N32_Handshake.handler.ie_location import IeLocation
from openapi_server.com.h21lab.TS29573_N32_Handshake.handler.ie_type import IeType
from openapi_server import util

from openapi_server.com.h21lab.TS29573_N32_Handshake.handler.ie_location import IeLocation  # noqa: E501
from openapi_server.com.h21lab.TS29573_N32_Handshake.handler.ie_type import IeType  # noqa: E501

class IeInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ie_loc=None, ie_type=None, req_ie=None, rsp_ie=None, is_modifiable=None):  # noqa: E501
        """IeInfo - a model defined in OpenAPI

        :param ie_loc: The ie_loc of this IeInfo.  # noqa: E501
        :type ie_loc: IeLocation
        :param ie_type: The ie_type of this IeInfo.  # noqa: E501
        :type ie_type: IeType
        :param req_ie: The req_ie of this IeInfo.  # noqa: E501
        :type req_ie: str
        :param rsp_ie: The rsp_ie of this IeInfo.  # noqa: E501
        :type rsp_ie: str
        :param is_modifiable: The is_modifiable of this IeInfo.  # noqa: E501
        :type is_modifiable: bool
        """
        self.openapi_types = {
            'ie_loc': IeLocation,
            'ie_type': IeType,
            'req_ie': str,
            'rsp_ie': str,
            'is_modifiable': bool
        }

        self.attribute_map = {
            'ie_loc': 'ieLoc',
            'ie_type': 'ieType',
            'req_ie': 'reqIe',
            'rsp_ie': 'rspIe',
            'is_modifiable': 'isModifiable'
        }

        self._ie_loc = ie_loc
        self._ie_type = ie_type
        self._req_ie = req_ie
        self._rsp_ie = rsp_ie
        self._is_modifiable = is_modifiable

    @classmethod
    def from_dict(cls, dikt) -> 'IeInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The IeInfo of this IeInfo.  # noqa: E501
        :rtype: IeInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ie_loc(self):
        """Gets the ie_loc of this IeInfo.


        :return: The ie_loc of this IeInfo.
        :rtype: IeLocation
        """
        return self._ie_loc

    @ie_loc.setter
    def ie_loc(self, ie_loc):
        """Sets the ie_loc of this IeInfo.


        :param ie_loc: The ie_loc of this IeInfo.
        :type ie_loc: IeLocation
        """
        if ie_loc is None:
            raise ValueError("Invalid value for `ie_loc`, must not be `None`")  # noqa: E501

        self._ie_loc = ie_loc

    @property
    def ie_type(self):
        """Gets the ie_type of this IeInfo.


        :return: The ie_type of this IeInfo.
        :rtype: IeType
        """
        return self._ie_type

    @ie_type.setter
    def ie_type(self, ie_type):
        """Sets the ie_type of this IeInfo.


        :param ie_type: The ie_type of this IeInfo.
        :type ie_type: IeType
        """
        if ie_type is None:
            raise ValueError("Invalid value for `ie_type`, must not be `None`")  # noqa: E501

        self._ie_type = ie_type

    @property
    def req_ie(self):
        """Gets the req_ie of this IeInfo.


        :return: The req_ie of this IeInfo.
        :rtype: str
        """
        return self._req_ie

    @req_ie.setter
    def req_ie(self, req_ie):
        """Sets the req_ie of this IeInfo.


        :param req_ie: The req_ie of this IeInfo.
        :type req_ie: str
        """

        self._req_ie = req_ie

    @property
    def rsp_ie(self):
        """Gets the rsp_ie of this IeInfo.


        :return: The rsp_ie of this IeInfo.
        :rtype: str
        """
        return self._rsp_ie

    @rsp_ie.setter
    def rsp_ie(self, rsp_ie):
        """Sets the rsp_ie of this IeInfo.


        :param rsp_ie: The rsp_ie of this IeInfo.
        :type rsp_ie: str
        """

        self._rsp_ie = rsp_ie

    @property
    def is_modifiable(self):
        """Gets the is_modifiable of this IeInfo.


        :return: The is_modifiable of this IeInfo.
        :rtype: bool
        """
        return self._is_modifiable

    @is_modifiable.setter
    def is_modifiable(self, is_modifiable):
        """Sets the is_modifiable of this IeInfo.


        :param is_modifiable: The is_modifiable of this IeInfo.
        :type is_modifiable: bool
        """

        self._is_modifiable = is_modifiable
