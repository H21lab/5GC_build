# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.com.h21lab.TS29573_N32_Handshake.handler.base_model_ import Model
import re
from openapi_server import util

import re  # noqa: E501

class N32fContextInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, n32f_context_id=None):  # noqa: E501
        """N32fContextInfo - a model defined in OpenAPI

        :param n32f_context_id: The n32f_context_id of this N32fContextInfo.  # noqa: E501
        :type n32f_context_id: str
        """
        self.openapi_types = {
            'n32f_context_id': str
        }

        self.attribute_map = {
            'n32f_context_id': 'n32fContextId'
        }

        self._n32f_context_id = n32f_context_id

    @classmethod
    def from_dict(cls, dikt) -> 'N32fContextInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The N32fContextInfo of this N32fContextInfo.  # noqa: E501
        :rtype: N32fContextInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def n32f_context_id(self):
        """Gets the n32f_context_id of this N32fContextInfo.


        :return: The n32f_context_id of this N32fContextInfo.
        :rtype: str
        """
        return self._n32f_context_id

    @n32f_context_id.setter
    def n32f_context_id(self, n32f_context_id):
        """Sets the n32f_context_id of this N32fContextInfo.


        :param n32f_context_id: The n32f_context_id of this N32fContextInfo.
        :type n32f_context_id: str
        """
        if n32f_context_id is None:
            raise ValueError("Invalid value for `n32f_context_id`, must not be `None`")  # noqa: E501
        if n32f_context_id is not None and not re.search(r'^[A-Fa-f0-9]{16}$', n32f_context_id):  # noqa: E501
            raise ValueError("Invalid value for `n32f_context_id`, must be a follow pattern or equal to `/^[A-Fa-f0-9]{16}$/`")  # noqa: E501

        self._n32f_context_id = n32f_context_id
