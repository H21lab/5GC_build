# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.com.h21lab.TS29573_N32_Handshake.handler.base_model_ import Model
from openapi_server.com.h21lab.TS29573_N32_Handshake.handler.failure_reason import FailureReason
from openapi_server import util

from openapi_server.com.h21lab.TS29573_N32_Handshake.handler.failure_reason import FailureReason  # noqa: E501

class N32fErrorDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attribute=None, msg_reconstruct_fail_reason=None):  # noqa: E501
        """N32fErrorDetail - a model defined in OpenAPI

        :param attribute: The attribute of this N32fErrorDetail.  # noqa: E501
        :type attribute: str
        :param msg_reconstruct_fail_reason: The msg_reconstruct_fail_reason of this N32fErrorDetail.  # noqa: E501
        :type msg_reconstruct_fail_reason: FailureReason
        """
        self.openapi_types = {
            'attribute': str,
            'msg_reconstruct_fail_reason': FailureReason
        }

        self.attribute_map = {
            'attribute': 'attribute',
            'msg_reconstruct_fail_reason': 'msgReconstructFailReason'
        }

        self._attribute = attribute
        self._msg_reconstruct_fail_reason = msg_reconstruct_fail_reason

    @classmethod
    def from_dict(cls, dikt) -> 'N32fErrorDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The N32fErrorDetail of this N32fErrorDetail.  # noqa: E501
        :rtype: N32fErrorDetail
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attribute(self):
        """Gets the attribute of this N32fErrorDetail.


        :return: The attribute of this N32fErrorDetail.
        :rtype: str
        """
        return self._attribute

    @attribute.setter
    def attribute(self, attribute):
        """Sets the attribute of this N32fErrorDetail.


        :param attribute: The attribute of this N32fErrorDetail.
        :type attribute: str
        """
        if attribute is None:
            raise ValueError("Invalid value for `attribute`, must not be `None`")  # noqa: E501

        self._attribute = attribute

    @property
    def msg_reconstruct_fail_reason(self):
        """Gets the msg_reconstruct_fail_reason of this N32fErrorDetail.


        :return: The msg_reconstruct_fail_reason of this N32fErrorDetail.
        :rtype: FailureReason
        """
        return self._msg_reconstruct_fail_reason

    @msg_reconstruct_fail_reason.setter
    def msg_reconstruct_fail_reason(self, msg_reconstruct_fail_reason):
        """Sets the msg_reconstruct_fail_reason of this N32fErrorDetail.


        :param msg_reconstruct_fail_reason: The msg_reconstruct_fail_reason of this N32fErrorDetail.
        :type msg_reconstruct_fail_reason: FailureReason
        """
        if msg_reconstruct_fail_reason is None:
            raise ValueError("Invalid value for `msg_reconstruct_fail_reason`, must not be `None`")  # noqa: E501

        self._msg_reconstruct_fail_reason = msg_reconstruct_fail_reason
