# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.com.h21lab.TS29573_N32_Handshake.handler.base_model_ import Model
from openapi_server.com.h21lab.TS29573_N32_Handshake.handler.ipx_provider_sec_info import IpxProviderSecInfo
from openapi_server.com.h21lab.TS29573_N32_Handshake.handler.protection_policy import ProtectionPolicy
import re
from openapi_server import util

from openapi_server.com.h21lab.TS29573_N32_Handshake.handler.ipx_provider_sec_info import IpxProviderSecInfo  # noqa: E501
from openapi_server.com.h21lab.TS29573_N32_Handshake.handler.protection_policy import ProtectionPolicy  # noqa: E501
import re  # noqa: E501

class SecParamExchReqData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, n32f_context_id=None, jwe_cipher_suite_list=None, jws_cipher_suite_list=None, protection_policy_info=None, ipx_provider_sec_info_list=None, sender=None):  # noqa: E501
        """SecParamExchReqData - a model defined in OpenAPI

        :param n32f_context_id: The n32f_context_id of this SecParamExchReqData.  # noqa: E501
        :type n32f_context_id: str
        :param jwe_cipher_suite_list: The jwe_cipher_suite_list of this SecParamExchReqData.  # noqa: E501
        :type jwe_cipher_suite_list: List[str]
        :param jws_cipher_suite_list: The jws_cipher_suite_list of this SecParamExchReqData.  # noqa: E501
        :type jws_cipher_suite_list: List[str]
        :param protection_policy_info: The protection_policy_info of this SecParamExchReqData.  # noqa: E501
        :type protection_policy_info: ProtectionPolicy
        :param ipx_provider_sec_info_list: The ipx_provider_sec_info_list of this SecParamExchReqData.  # noqa: E501
        :type ipx_provider_sec_info_list: List[IpxProviderSecInfo]
        :param sender: The sender of this SecParamExchReqData.  # noqa: E501
        :type sender: str
        """
        self.openapi_types = {
            'n32f_context_id': str,
            'jwe_cipher_suite_list': List[str],
            'jws_cipher_suite_list': List[str],
            'protection_policy_info': ProtectionPolicy,
            'ipx_provider_sec_info_list': List[IpxProviderSecInfo],
            'sender': str
        }

        self.attribute_map = {
            'n32f_context_id': 'n32fContextId',
            'jwe_cipher_suite_list': 'jweCipherSuiteList',
            'jws_cipher_suite_list': 'jwsCipherSuiteList',
            'protection_policy_info': 'protectionPolicyInfo',
            'ipx_provider_sec_info_list': 'ipxProviderSecInfoList',
            'sender': 'sender'
        }

        self._n32f_context_id = n32f_context_id
        self._jwe_cipher_suite_list = jwe_cipher_suite_list
        self._jws_cipher_suite_list = jws_cipher_suite_list
        self._protection_policy_info = protection_policy_info
        self._ipx_provider_sec_info_list = ipx_provider_sec_info_list
        self._sender = sender

    @classmethod
    def from_dict(cls, dikt) -> 'SecParamExchReqData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SecParamExchReqData of this SecParamExchReqData.  # noqa: E501
        :rtype: SecParamExchReqData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def n32f_context_id(self):
        """Gets the n32f_context_id of this SecParamExchReqData.


        :return: The n32f_context_id of this SecParamExchReqData.
        :rtype: str
        """
        return self._n32f_context_id

    @n32f_context_id.setter
    def n32f_context_id(self, n32f_context_id):
        """Sets the n32f_context_id of this SecParamExchReqData.


        :param n32f_context_id: The n32f_context_id of this SecParamExchReqData.
        :type n32f_context_id: str
        """
        if n32f_context_id is None:
            raise ValueError("Invalid value for `n32f_context_id`, must not be `None`")  # noqa: E501
        if n32f_context_id is not None and not re.search(r'^[A-Fa-f0-9]{16}$', n32f_context_id):  # noqa: E501
            raise ValueError("Invalid value for `n32f_context_id`, must be a follow pattern or equal to `/^[A-Fa-f0-9]{16}$/`")  # noqa: E501

        self._n32f_context_id = n32f_context_id

    @property
    def jwe_cipher_suite_list(self):
        """Gets the jwe_cipher_suite_list of this SecParamExchReqData.


        :return: The jwe_cipher_suite_list of this SecParamExchReqData.
        :rtype: List[str]
        """
        return self._jwe_cipher_suite_list

    @jwe_cipher_suite_list.setter
    def jwe_cipher_suite_list(self, jwe_cipher_suite_list):
        """Sets the jwe_cipher_suite_list of this SecParamExchReqData.


        :param jwe_cipher_suite_list: The jwe_cipher_suite_list of this SecParamExchReqData.
        :type jwe_cipher_suite_list: List[str]
        """

        self._jwe_cipher_suite_list = jwe_cipher_suite_list

    @property
    def jws_cipher_suite_list(self):
        """Gets the jws_cipher_suite_list of this SecParamExchReqData.


        :return: The jws_cipher_suite_list of this SecParamExchReqData.
        :rtype: List[str]
        """
        return self._jws_cipher_suite_list

    @jws_cipher_suite_list.setter
    def jws_cipher_suite_list(self, jws_cipher_suite_list):
        """Sets the jws_cipher_suite_list of this SecParamExchReqData.


        :param jws_cipher_suite_list: The jws_cipher_suite_list of this SecParamExchReqData.
        :type jws_cipher_suite_list: List[str]
        """

        self._jws_cipher_suite_list = jws_cipher_suite_list

    @property
    def protection_policy_info(self):
        """Gets the protection_policy_info of this SecParamExchReqData.


        :return: The protection_policy_info of this SecParamExchReqData.
        :rtype: ProtectionPolicy
        """
        return self._protection_policy_info

    @protection_policy_info.setter
    def protection_policy_info(self, protection_policy_info):
        """Sets the protection_policy_info of this SecParamExchReqData.


        :param protection_policy_info: The protection_policy_info of this SecParamExchReqData.
        :type protection_policy_info: ProtectionPolicy
        """

        self._protection_policy_info = protection_policy_info

    @property
    def ipx_provider_sec_info_list(self):
        """Gets the ipx_provider_sec_info_list of this SecParamExchReqData.


        :return: The ipx_provider_sec_info_list of this SecParamExchReqData.
        :rtype: List[IpxProviderSecInfo]
        """
        return self._ipx_provider_sec_info_list

    @ipx_provider_sec_info_list.setter
    def ipx_provider_sec_info_list(self, ipx_provider_sec_info_list):
        """Sets the ipx_provider_sec_info_list of this SecParamExchReqData.


        :param ipx_provider_sec_info_list: The ipx_provider_sec_info_list of this SecParamExchReqData.
        :type ipx_provider_sec_info_list: List[IpxProviderSecInfo]
        """

        self._ipx_provider_sec_info_list = ipx_provider_sec_info_list

    @property
    def sender(self):
        """Gets the sender of this SecParamExchReqData.

        Fully Qualified Domain Name  # noqa: E501

        :return: The sender of this SecParamExchReqData.
        :rtype: str
        """
        return self._sender

    @sender.setter
    def sender(self, sender):
        """Sets the sender of this SecParamExchReqData.

        Fully Qualified Domain Name  # noqa: E501

        :param sender: The sender of this SecParamExchReqData.
        :type sender: str
        """

        self._sender = sender
