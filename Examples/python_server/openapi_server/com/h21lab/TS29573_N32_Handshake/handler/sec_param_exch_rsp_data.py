# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.com.h21lab.TS29573_N32_Handshake.handler.base_model_ import Model
from openapi_server.com.h21lab.TS29573_N32_Handshake.handler.ipx_provider_sec_info import IpxProviderSecInfo
from openapi_server.com.h21lab.TS29573_N32_Handshake.handler.protection_policy import ProtectionPolicy
import re
from openapi_server import util

from openapi_server.com.h21lab.TS29573_N32_Handshake.handler.ipx_provider_sec_info import IpxProviderSecInfo  # noqa: E501
from openapi_server.com.h21lab.TS29573_N32_Handshake.handler.protection_policy import ProtectionPolicy  # noqa: E501
import re  # noqa: E501

class SecParamExchRspData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, n32f_context_id=None, selected_jwe_cipher_suite=None, selected_jws_cipher_suite=None, sel_protection_policy_info=None, ipx_provider_sec_info_list=None, sender=None):  # noqa: E501
        """SecParamExchRspData - a model defined in OpenAPI

        :param n32f_context_id: The n32f_context_id of this SecParamExchRspData.  # noqa: E501
        :type n32f_context_id: str
        :param selected_jwe_cipher_suite: The selected_jwe_cipher_suite of this SecParamExchRspData.  # noqa: E501
        :type selected_jwe_cipher_suite: str
        :param selected_jws_cipher_suite: The selected_jws_cipher_suite of this SecParamExchRspData.  # noqa: E501
        :type selected_jws_cipher_suite: str
        :param sel_protection_policy_info: The sel_protection_policy_info of this SecParamExchRspData.  # noqa: E501
        :type sel_protection_policy_info: ProtectionPolicy
        :param ipx_provider_sec_info_list: The ipx_provider_sec_info_list of this SecParamExchRspData.  # noqa: E501
        :type ipx_provider_sec_info_list: List[IpxProviderSecInfo]
        :param sender: The sender of this SecParamExchRspData.  # noqa: E501
        :type sender: str
        """
        self.openapi_types = {
            'n32f_context_id': str,
            'selected_jwe_cipher_suite': str,
            'selected_jws_cipher_suite': str,
            'sel_protection_policy_info': ProtectionPolicy,
            'ipx_provider_sec_info_list': List[IpxProviderSecInfo],
            'sender': str
        }

        self.attribute_map = {
            'n32f_context_id': 'n32fContextId',
            'selected_jwe_cipher_suite': 'selectedJweCipherSuite',
            'selected_jws_cipher_suite': 'selectedJwsCipherSuite',
            'sel_protection_policy_info': 'selProtectionPolicyInfo',
            'ipx_provider_sec_info_list': 'ipxProviderSecInfoList',
            'sender': 'sender'
        }

        self._n32f_context_id = n32f_context_id
        self._selected_jwe_cipher_suite = selected_jwe_cipher_suite
        self._selected_jws_cipher_suite = selected_jws_cipher_suite
        self._sel_protection_policy_info = sel_protection_policy_info
        self._ipx_provider_sec_info_list = ipx_provider_sec_info_list
        self._sender = sender

    @classmethod
    def from_dict(cls, dikt) -> 'SecParamExchRspData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SecParamExchRspData of this SecParamExchRspData.  # noqa: E501
        :rtype: SecParamExchRspData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def n32f_context_id(self):
        """Gets the n32f_context_id of this SecParamExchRspData.


        :return: The n32f_context_id of this SecParamExchRspData.
        :rtype: str
        """
        return self._n32f_context_id

    @n32f_context_id.setter
    def n32f_context_id(self, n32f_context_id):
        """Sets the n32f_context_id of this SecParamExchRspData.


        :param n32f_context_id: The n32f_context_id of this SecParamExchRspData.
        :type n32f_context_id: str
        """
        if n32f_context_id is None:
            raise ValueError("Invalid value for `n32f_context_id`, must not be `None`")  # noqa: E501
        if n32f_context_id is not None and not re.search(r'^[A-Fa-f0-9]{16}$', n32f_context_id):  # noqa: E501
            raise ValueError("Invalid value for `n32f_context_id`, must be a follow pattern or equal to `/^[A-Fa-f0-9]{16}$/`")  # noqa: E501

        self._n32f_context_id = n32f_context_id

    @property
    def selected_jwe_cipher_suite(self):
        """Gets the selected_jwe_cipher_suite of this SecParamExchRspData.


        :return: The selected_jwe_cipher_suite of this SecParamExchRspData.
        :rtype: str
        """
        return self._selected_jwe_cipher_suite

    @selected_jwe_cipher_suite.setter
    def selected_jwe_cipher_suite(self, selected_jwe_cipher_suite):
        """Sets the selected_jwe_cipher_suite of this SecParamExchRspData.


        :param selected_jwe_cipher_suite: The selected_jwe_cipher_suite of this SecParamExchRspData.
        :type selected_jwe_cipher_suite: str
        """

        self._selected_jwe_cipher_suite = selected_jwe_cipher_suite

    @property
    def selected_jws_cipher_suite(self):
        """Gets the selected_jws_cipher_suite of this SecParamExchRspData.


        :return: The selected_jws_cipher_suite of this SecParamExchRspData.
        :rtype: str
        """
        return self._selected_jws_cipher_suite

    @selected_jws_cipher_suite.setter
    def selected_jws_cipher_suite(self, selected_jws_cipher_suite):
        """Sets the selected_jws_cipher_suite of this SecParamExchRspData.


        :param selected_jws_cipher_suite: The selected_jws_cipher_suite of this SecParamExchRspData.
        :type selected_jws_cipher_suite: str
        """

        self._selected_jws_cipher_suite = selected_jws_cipher_suite

    @property
    def sel_protection_policy_info(self):
        """Gets the sel_protection_policy_info of this SecParamExchRspData.


        :return: The sel_protection_policy_info of this SecParamExchRspData.
        :rtype: ProtectionPolicy
        """
        return self._sel_protection_policy_info

    @sel_protection_policy_info.setter
    def sel_protection_policy_info(self, sel_protection_policy_info):
        """Sets the sel_protection_policy_info of this SecParamExchRspData.


        :param sel_protection_policy_info: The sel_protection_policy_info of this SecParamExchRspData.
        :type sel_protection_policy_info: ProtectionPolicy
        """

        self._sel_protection_policy_info = sel_protection_policy_info

    @property
    def ipx_provider_sec_info_list(self):
        """Gets the ipx_provider_sec_info_list of this SecParamExchRspData.


        :return: The ipx_provider_sec_info_list of this SecParamExchRspData.
        :rtype: List[IpxProviderSecInfo]
        """
        return self._ipx_provider_sec_info_list

    @ipx_provider_sec_info_list.setter
    def ipx_provider_sec_info_list(self, ipx_provider_sec_info_list):
        """Sets the ipx_provider_sec_info_list of this SecParamExchRspData.


        :param ipx_provider_sec_info_list: The ipx_provider_sec_info_list of this SecParamExchRspData.
        :type ipx_provider_sec_info_list: List[IpxProviderSecInfo]
        """

        self._ipx_provider_sec_info_list = ipx_provider_sec_info_list

    @property
    def sender(self):
        """Gets the sender of this SecParamExchRspData.

        Fully Qualified Domain Name  # noqa: E501

        :return: The sender of this SecParamExchRspData.
        :rtype: str
        """
        return self._sender

    @sender.setter
    def sender(self, sender):
        """Sets the sender of this SecParamExchRspData.

        Fully Qualified Domain Name  # noqa: E501

        :param sender: The sender of this SecParamExchRspData.
        :type sender: str
        """

        self._sender = sender
